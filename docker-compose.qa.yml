#version: '3.8'  #agregar esto solo se necesita especificar la versión
services:
  db:
    image: mysql:9.0.1
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      #MYSQL_USER: ${DB_USER}
      #MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "4350:3306"

  web:
    build:
      context: .
      dockerfile: ./docker/dockerfile.qa
    image: studio-go:qa
    container_name: studio-go
    command: >
      sh -c "
      rm -rf staticfiles/ &&
      python manage.py makemigrations infrastructure --settings=config.settings.qa &&
      python manage.py migrate infrastructure --fake --settings=config.settings.qa &&
      python manage.py makemigrations taskApp --settings=config.settings.qa &&
      python manage.py migrate taskApp --fake --settings=config.settings.qa &&
      python manage.py makemigrations uploadApp --settings=config.settings.qa &&
      python manage.py migrate uploadApp --fake --settings=config.settings.qa &&
      python manage.py makemigrations --settings=config.settings.qa &&
      python manage.py migrate --fake --settings=config.settings.qa &&
      python manage.py collectstatic --no-input --settings=config.settings.qa &&
      gunicorn --env DJANGO_SETTINGS_MODULE=config.settings.qa config.wsgi:application --bind 0.0.0.0:7000
      "
    volumes:
      - .:/app
      - media_data:/app/media 
    ports:
      - "7000:7000"
    depends_on:
      - db
      - rabbitmq

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - media_data:/app/media
    depends_on:
      - web

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  celery-beat:
    build:
      context: .
      dockerfile: ./docker/dockerfile.qa
    image: c-beat:qa
    container_name: c-beat
    command: celery -A config beat --loglevel=info
    depends_on:
      - rabbitmq
      - db
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"

  celery-worker-products:
    build:
      context: .
      dockerfile: ./docker/dockerfile.qa
    image: cw-products:qa
    container_name: cw-products
    command: celery -A config worker --loglevel=info --concurrency=2 -Q q_products_in
    depends_on:
      - rabbitmq
      - db
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"

  celery-worker-products-recetas:
    build:
      context: .
      dockerfile: ./docker/dockerfile.app
    image: cw-recetas:qa
    container_name: cw-recetas
    command: celery -A config worker --loglevel=info --concurrency=2 -Q q_products_in_receta
    depends_on:
      - rabbitmq
      - db
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"
  
  celery-worker-products-importados:
    build:
      context: .
      dockerfile: ./docker/dockerfile.app
    image: cw-importados:qa
    container_name: cw-products-importados
    command: celery -A config worker --loglevel=info --concurrency=2 -Q q_products_in_importado
    depends_on:
      - rabbitmq
      - db
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"


  celery-worker-users:
    build:
      context: .
      dockerfile: ./docker/dockerfile.qa
    image: cw-users:qa
    container_name: cw-users
    command: celery -A config worker --loglevel=info --concurrency=2 -Q q_clients_in
    depends_on:
      - rabbitmq
      - db
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"

  celery-worker-pdf:
    build:
      context: .
      dockerfile: ./docker/dockerfile.qa  # Asegúrate de que este Dockerfile esté configurado correctamente
    command: celery -A config worker -Q q_pdf_generation -l info -E
    image: cw-pdf:qa
    container_name: cw-pdf
    depends_on:
      - rabbitmq
      - db
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"

  celery-update-recipes-components:
    build:
      context: .
      dockerfile: ./docker/dockerfile.qa
    command: sh -c "celery -A config worker -Q update_recipe_comp -l info -E"
    image: cw-update-components:qa
    container_name: cw-update-components
    depends_on:
      - rabbitmq
      - db
    volumes:
      - .:/app
    environment:
      CELERY_BROKER_URL: "amqp://guest:guest@rabbitmq:5672//"

volumes:
  mysql_data:
  media_data: 

